/product/collection:
  get:
    tags:
      - Vendor product management
    summary: Get all products
    description: Return all product for logged user
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Return all products for the user or return nothing if no product available
      '400':
        description: Bad Request (syntax error, incorrect input format, etc..)
      '401':
        description: Unauthorized
      '403':
        description: Forbidden (Unauthorized action)
      '500':
        description: Internal server error

/product/collection/{id}:
  get:
    tags:
      - Vendor product management
    summary: Get single product
    description: return a product basing on id provided
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The id of product
    responses:
      '200':
        description: Return info for the product 
      '400':
        description: Bad Request (syntax error, incorrect input format, etc..)
      '401':
        description: Unauthorized
      '403':
        description: Forbidden (Unauthorized action)
      '404':
        description: Product not found
      '500':
        description: Internal server error

/product:
  post:
    tags:
      - Vendor product management
    summary: Creates new product
    security:
      - bearerAuth: []
    consumes:
      - application/json
    requestBody:
      required: true
      content:
         application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              newPrice:
                type: number
              quantity:
                type: number
              images:
                type: file
              categories:
                oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                example: "'category' or ['category1', 'category2', ...]"
              expirationDate:
                type: string
                format: date
            required:
              - name
              - description
              - quantity
              - newPrice
              - categories
            optional:
              - expirationDate
    responses:
      '201':
        description: Successfully added the product
      '400':
        description: Bad Request (syntax error, incorrect input format, etc..)
      '401':
        description: Unauthorized
      '403':
        description: Forbidden (Unauthorized action)
      '404':
        description: Product not found
      '500':
        description: Internal server error

/product/{id}:
  put:
    tags:
      - Vendor product management
    summary: Update a product
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The id of product
    responses:
      '200':
        description: Successfully updated product
      '400':
        description: Bad Request (syntax error, incorrect input format, etc..)
      '401':
        description: Unauthorized
      '403':
        description: Forbidden (Unauthorized action)
      '404':
        description: Product not found
      '500':
        description: Internal server error

  delete:
    tags:
      - Vendor product management
    summary: Delete a product
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The id of product
    responses:
      '200':
        description: Successfully deleted product
      '400':
        description: Bad Request (syntax error, incorrect input format, etc..)
      '401':
        description: Unauthorized
      '403':
        description: Forbidden (Unauthorized action)
      '404':
        description: Product not found
      '500':
        description: Internal server error
  
/product/images/{id}:
  delete:
    tags:
      - Vendor product management
    summary: Delete an image of product
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The id of product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
            required:
              - id
    responses:
      '200':
        description: Successfully deleted product image
      '400':
        description: Bad Request (syntax error, incorrect input format, etc..)
      '401':
        description: Unauthorized
      '403':
        description: Forbidden (Unauthorized action)
      '404':
        description: Product not found
      '500':
        description: Internal server error

/product/recommended:
  get:
    tags:
      - Products Recommended
    summary: Gets recommended products
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: categories
        required: false
        schema:
          type: string
          pattern: '^{"categories":\s*\[[^\]]*\]\s*}$'
        description: JSON string representing an array of category IDs
      - in: query
        name: vendor
        required: false
        schema:
          type: string
        description: Vendor ID
    responses:
      '201':
        description: Successfully data retrieved
      '400':
        description: Bad Request (syntax error, incorrect input format, etc..)
      '401':
        description: Unauthorized
      '403':
        description: Forbidden (Unauthorized action)
      '404':
        description: Products not found
      '500':
        description: Internal server error

/vendor/product/availability/{id}:
  put:
    tags:
      - Vendor product management
    summary: Update product availability
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The id of product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              isAvailable:
                type: boolean
            required:
              - isAvailable
    responses:
      '200':
        description: Product status updated successfully
      '201':
        description: Product status is set to false because it is expired
      '202':
       description: Product status is set to false because it is out of stock
      '400':
        description: Product status is already up to date
      '401':
        description: Please fill all the required fields
      '404':
        description: Product not found or User not found or Product not found in your stock
      '500':
        description: Internal server error
        
